<fieldset>
    <div class="form-card">
      <div class="secondary-container title-bar">
        <div class="row">
          <div class="col-7">
            <h2 class="fs-title">Previous Diseases and Disorders:</h2>
          </div>
          <div class="col-5">
            <h2 class="steps">Step 5 - 5</h2>
          </div>
        </div>
      </div>

      <div id="addPlace5"></div>
  
    </div>
  
    <input type="button" class="next action-button" id="submitButton" value="Submit"/>
    <input
      type="button"
      name="previous"
      class="previous action-button-previous"
      value="Previous"
    />

    <script>
      function showLoader(){
        $(".se-pre-con").fadeIn();
      }

      $.get("/patient/profile/getSectionData/Previous Diseases and Disorders", (data) => {
        let elmStr = "";
        for (let i = 0; i < data.subSections.length; i++) {
          elmStr += getSubSectionStr5(data._id, data.subSections[i]);
        }
        $("#addPlace5").replaceWith(elmStr); 
      });

      $('#submitButton').click((e) => {
        e.preventDefault();
        showLoader()
        $('#msform').submit();
      })

      function getSubSectionStr5(sectionID, subSection) {
      let elmStr = "", qStr='';
      let oneThirdOfTotalQuestions = Math.ceil(subSection.questions.length / 3);

      for (let i = 0; i < subSection.questions.length; i++) {
        if(i && !(i % oneThirdOfTotalQuestions))
        {
          elmStr += '<div class="col">'+ qStr +'</div>';
          qStr = ''
        }
        qStr+= getQuestionStr5(sectionID, subSection._id, subSection.questions[i])
      }
      elmStr += '<div class="col">'+ qStr +'</div>';

      return '<div class="secondary-container">'+
      ' <h4 class="subsection-title">' + subSection.name +'</h4><br> '+ 
      '<h6>In the past month, have you had any of the following problems?</h6> '+
      '<div class="row">' + elmStr + '</div></div>'
    }
    
    function getQuestionStr5(sectionID, subSectionID, question) {
      let value = (typeof mapQuesToAnswer[question._id.toString()] !== 'undefined') ? mapQuesToAnswer[question._id.toString()]: ''
      let elmStr = "";
      elmStr += '<label class="fieldlabels">' + question.name + "</label>";
      if (question.inputType == "numerical")
        elmStr += ` <input type="number" name="${sectionID}#####${subSectionID}#####${question._id}" placeholder="" value="${value}"/>`;
      else if (question.inputType == "date")
        elmStr += ` <input type="date" name="${sectionID}#####${subSectionID}#####${question._id}" placeholder="" value="${value}"/>`;
      else if (question.inputType == "singleLine")
        elmStr += ` <input type="text" name="${sectionID}#####${subSectionID}#####${question._id}" placeholder="" value="${value}"/>`;
      else if (question.inputType == "multiLine")
        elmStr += `<textarea class="form-control" name="${sectionID}#####${subSectionID}#####${question._id}"  rows="3">${value}</textarea>`
      else if (question.inputType == "multiChoiceSingleAns")
        elmStr += getMultiChoiceSingleOp5(sectionID, subSectionID, question._id, question.options)
      else if (question.inputType == "multiChoiceMultiAns")
        elmStr += getMultiChoiceMultiOp5(sectionID, subSectionID, question._id, question.options)

      return elmStr + '<br>';
    }

    function getMultiChoiceSingleOp5(sectionID, subSectionID, qId, options) {
      let elmStr = '', checked, displayNone 
      let conditionalPart = '', condArrayStr = '['

      for (let i = 0; i < options.length; i++) {
        if (options[i].questions.length > 0)
          condArrayStr += `'conditional${options[i]._id}', `
      }
      condArrayStr += ']'

      for (let i = 0; i < options.length; i++) {
        checked = (typeof mapQuesToAnswer[qId.toString()] !== 'undefined' && mapQuesToAnswer[qId.toString()].includes(options[i]._id.toString())) ? 'checked' : ''
        displayNone = (typeof mapQuesToAnswer[qId.toString()] !== 'undefined' && mapQuesToAnswer[qId.toString()].includes(options[i]._id.toString())) ? '' : 'style="display: none;"'

        if (options[i].questions.length > 0) {
          let str = `conditional${options[i]._id},`
          let newCondArray = condArrayStr.replace(str, '')
          elmStr += '<div class="custom-control custom-radio">' +
            `<input type="radio" id="${options[i]._id}" name="${sectionID}#####${subSectionID}#####${qId}" class="custom-control-input" value="${options[i]._id}#####${options[i].name}" onclick="hideConditionalSection(${newCondArray}); displayConditionalSection(['conditional${options[i]._id}']);" ${checked}>` +
            `<label class="custom-control-label" for="${options[i]._id}">${options[i].name}</label>` +
            '</div>'
          let qStr = ''
          for (let j = 0; j < options[i].questions.length; j++) {
            qStr += getQuestionStr5(sectionID, subSectionID, options[i].questions[j])
          }
          conditionalPart += `<div id= "conditional${options[i]._id}" ${displayNone}>${qStr}</div>`
        }
        else {
          elmStr += '<div class="custom-control custom-radio">' +
            `<input type="radio" id="${options[i]._id}" name="${sectionID}#####${subSectionID}#####${qId}" class="custom-control-input" value="${options[i]._id}#####${options[i].name}" onclick="hideConditionalSection(${condArrayStr});" ${checked}>` +
            `<label class="custom-control-label" for="${options[i]._id}">${options[i].name}</label>` +
            '</div>'
        }
      }
      return elmStr + conditionalPart
    }

    function getMultiChoiceMultiOp5(sectionID, subSectionID, qId, options) {
      let elmStr = ''

      for (let i = 0; i < options.length; i++) {
        checked = (typeof mapQuesToAnswer[qId.toString()] !== 'undefined' && mapQuesToAnswer[qId.toString()].includes(options[i]._id.toString())) ? 'checked' : ''
        displayNone = (typeof mapQuesToAnswer[qId.toString()] !== 'undefined' && mapQuesToAnswer[qId.toString()].includes(options[i]._id.toString())) ? '' : 'style="display: none;"'

        elmStr += '<div class="custom-control custom-checkbox">' +
          `<input type="checkbox" id="${options[i]._id}" name="${sectionID}#####${subSectionID}#####${qId}" class="custom-control-input" value="${options[i]._id}#####${options[i].name}" onclick="displayConditionalSectionCheckbox('${options[i]._id}' , 'conditional${options[i]._id}');" ${checked}>` +
          `<label class="custom-control-label" for="${options[i]._id}">${options[i].name}</label>` +
          '</div>'

        if (options[i].questions.length > 0) {
          let qStr = ''
          for (let j = 0; j < options[i].questions.length; j++) {
            qStr += getQuestionStr5(sectionID, subSectionID, options[i].questions[j])
          }
          elmStr += `<div id= "conditional${options[i]._id}" ${displayNone}>${qStr}</div>`
        }
      }
      return elmStr
    }
    </script>
  </fieldset>
  